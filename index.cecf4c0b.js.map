{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = Game.STATUS.idle;\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var moveAbility = false;\n                var newState = this.state.map(function(row) {\n                    var filterRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = 0; i < filterRow.length; i++)if (filterRow[i] === filterRow[i + 1]) {\n                        var mergedValue = filterRow[i] * 2;\n                        newRow.push(mergedValue);\n                        _this.score += mergedValue;\n                        i++;\n                        moveAbility = true;\n                    } else newRow.push(filterRow[i]);\n                    while(newRow.length < row.length)newRow.push(0);\n                    if (!moveAbility) moveAbility = !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    });\n                    return newRow;\n                });\n                if (moveAbility) {\n                    this.state = newState;\n                    this.addNumbers();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return moveAbility;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var moveAbility = false;\n                var newState = this.state.map(function(row) {\n                    var filterRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = filterRow.length - 1; i >= 0; i--)if (filterRow[i] === filterRow[i - 1]) {\n                        var mergedValue = filterRow[i] * 2;\n                        newRow.unshift(mergedValue);\n                        _this.score += mergedValue;\n                        i--;\n                        moveAbility = true;\n                    } else newRow.unshift(filterRow[i]);\n                    while(newRow.length < row.length)newRow.unshift(0);\n                    if (!moveAbility && !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    })) moveAbility = true;\n                    return newRow;\n                });\n                if (moveAbility) {\n                    this.state = newState;\n                    this.addNumbers();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return moveAbility;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var moveAbility = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filterColumn = [];\n                    for(var r = 0; r < this.state.length; r++)if (this.state[r][c] !== 0) filterColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filterColumn.length; i++)if (filterColumn[i] === filterColumn[i + 1]) {\n                        var mergedValue = filterColumn[i] * 2;\n                        newColumn.push(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        moveAbility = true;\n                    } else newColumn.push(filterColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.push(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        moveAbility = true;\n                    }\n                }\n                if (moveAbility) {\n                    this.state = newState;\n                    this.addNumbers();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return moveAbility;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var moveAbility = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filterColumn = [];\n                    for(var r = this.state.length - 1; r >= 0; r--)if (this.state[r][c] !== 0) filterColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filterColumn.length; i++)if (filterColumn[i] === filterColumn[i + 1]) {\n                        var mergedValue = filterColumn[i] * 2;\n                        newColumn.unshift(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        moveAbility = true;\n                    } else newColumn.unshift(filterColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.unshift(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        moveAbility = true;\n                    }\n                }\n                if (moveAbility) {\n                    this.state = newState;\n                    this.addNumbers();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return moveAbility;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.playing;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.addNumbers();\n                this.addNumbers();\n                this.setState();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = Game.STATUS.idle;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.setState();\n            }\n        },\n        {\n            key: \"getRandomNumber\",\n            value: function getRandomNumber() {\n                return Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"addNumbers\",\n            value: function addNumbers() {\n                var emptyCell = [];\n                for(var rows = 0; rows < this.state.length; rows++){\n                    for(var cells = 0; cells < this.state[rows].length; cells++)if (this.state[rows][cells] === 0) emptyCell.push({\n                        r: rows,\n                        c: cells\n                    });\n                }\n                var randomIndex = Math.floor(Math.random() * emptyCell.length);\n                var _emptyCell_randomIndex = emptyCell[randomIndex], r = _emptyCell_randomIndex.r, c = _emptyCell_randomIndex.c;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                newState[r][c] = this.getRandomNumber();\n                this.state = newState;\n            }\n        },\n        {\n            key: \"setState\",\n            value: function setState() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var cellsValue = this.state.flat();\n                if (cells.length === 0) return;\n                for(var i = 0; i < cellsValue.length; i++){\n                    var currentCells = cells[i];\n                    var currentValue = cellsValue[i];\n                    if (!currentCells) continue;\n                    currentCells.className = \"field-cell\";\n                    if (currentValue > 0) {\n                        currentCells.textContent = currentValue;\n                        currentCells.classList.add(\"field-cell--\".concat(currentValue));\n                    } else currentCells.textContent = \"\";\n                }\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus() {\n                var moveAbility = false;\n                var mergeAbility = false;\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 2048) {\n                        this.status = Game.STATUS.win;\n                        return;\n                    }\n                }\n                for(var i1 = 0; i1 < this.state.length; i1++){\n                    for(var j1 = 0; j1 < this.state[i1].length - 1; j1++)if (this.state[i1][j1] === this.state[i1][j1 + 1]) {\n                        mergeAbility = true;\n                        break;\n                    }\n                    if (mergeAbility) break;\n                }\n                if (!mergeAbility) for(var i2 = 0; i2 < this.state.length - 1; i2++){\n                    for(var j2 = 0; j2 < this.state[i2].length; j2++)if (this.state[i2][j2] === this.state[i2 + 1][j2]) {\n                        mergeAbility = true;\n                        break;\n                    }\n                    if (mergeAbility) break;\n                }\n                for(var i3 = 0; i3 < this.state.length; i3++){\n                    for(var j3 = 0; j3 < this.state[i3].length; j3++)if (this.state[i3][j3] === 0) {\n                        moveAbility = true;\n                        break;\n                    }\n                    if (moveAbility) break;\n                }\n                if (!moveAbility && !mergeAbility) this.status = Game.STATUS.lose;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$MOVE_LEFT = \"ArrowLeft\";\nvar $197cd56b15c33885$var$MOVE_RIGHT = \"ArrowRight\";\nvar $197cd56b15c33885$var$MOVE_UP = \"ArrowUp\";\nvar $197cd56b15c33885$var$MOVE_DOWN = \"ArrowDown\";\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nfunction $197cd56b15c33885$var$updateScore() {\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n}\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$buttonStart.classList.toggle(\"restart\");\n    $197cd56b15c33885$var$buttonStart.classList.toggle(\"start\");\n    $197cd56b15c33885$var$messageStart.classList.toggle(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$score.textContent = 0;\n    if ($197cd56b15c33885$var$buttonStart.className.includes(\"start\")) {\n        $197cd56b15c33885$var$buttonStart.textContent = \"Start\";\n        $197cd56b15c33885$var$game.restart();\n    }\n    if ($197cd56b15c33885$var$buttonStart.className.includes(\"restart\")) {\n        $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n        $197cd56b15c33885$var$game.start();\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$arrowMove);\n}\nvar $197cd56b15c33885$var$deleteMove = function() {\n    return document.removeEventListener(\"keydown\", $197cd56b15c33885$var$arrowMove);\n};\nfunction $197cd56b15c33885$var$arrowMove(action) {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.playing) {\n        var canMove = false;\n        switch(action.key){\n            case $197cd56b15c33885$var$MOVE_LEFT:\n                canMove = $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case $197cd56b15c33885$var$MOVE_RIGHT:\n                canMove = $197cd56b15c33885$var$game.moveRight();\n                break;\n            case $197cd56b15c33885$var$MOVE_UP:\n                canMove = $197cd56b15c33885$var$game.moveUp();\n                break;\n            case $197cd56b15c33885$var$MOVE_DOWN:\n                canMove = $197cd56b15c33885$var$game.moveDown();\n                break;\n            default:\n                break;\n        }\n        if (canMove) $197cd56b15c33885$var$updateScore();\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.lose) {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$deleteMove();\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.win) {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$deleteMove();\n    }\n    action.preventDefault();\n}\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$arrowMove);\n\n})();\n//# sourceMappingURL=index.cecf4c0b.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst MOVE_LEFT = 'ArrowLeft';\nconst MOVE_RIGHT = 'ArrowRight';\nconst MOVE_UP = 'ArrowUp';\nconst MOVE_DOWN = 'ArrowDown';\n\nconst buttonStart = document.querySelector('.button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst score = document.querySelector('.game-score');\n\nfunction updateScore() {\n  score.textContent = game.score;\n}\n\nbuttonStart.addEventListener('click', startGame);\n\nfunction startGame() {\n  buttonStart.classList.toggle('restart');\n  buttonStart.classList.toggle('start');\n  messageStart.classList.toggle('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  score.textContent = 0;\n\n  if (buttonStart.className.includes('start')) {\n    buttonStart.textContent = 'Start';\n\n    game.restart();\n  }\n\n  if (buttonStart.className.includes('restart')) {\n    buttonStart.textContent = 'Restart';\n\n    game.start();\n  }\n\n  document.addEventListener('keydown', arrowMove);\n}\n\nconst deleteMove = () => document.removeEventListener('keydown', arrowMove);\n\nfunction arrowMove(action) {\n  if (game.getStatus() === Game.STATUS.playing) {\n    let canMove = false;\n\n    switch (action.key) {\n      case MOVE_LEFT:\n        canMove = game.moveLeft();\n        break;\n      case MOVE_RIGHT:\n        canMove = game.moveRight();\n        break;\n      case MOVE_UP:\n        canMove = game.moveUp();\n        break;\n      case MOVE_DOWN:\n        canMove = game.moveDown();\n        break;\n      default:\n        break;\n    }\n\n    if (canMove) {\n      updateScore();\n    }\n  }\n\n  if (game.getStatus() === Game.STATUS.lose) {\n    messageLose.classList.remove('hidden');\n\n    deleteMove();\n  }\n\n  if (game.getStatus() === Game.STATUS.win) {\n    messageWin.classList.remove('hidden');\n\n    deleteMove();\n  }\n\n  action.preventDefault();\n}\n\ndocument.addEventListener('keydown', arrowMove);\n","'use strict';\n\nclass Game {\n  static STATUS = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = Game.STATUS.idle;\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  moveLeft() {\n    if (this.getStatus() !== Game.STATUS.playing) {\n      return;\n    }\n\n    let moveAbility = false;\n\n    const newState = this.state.map((row) => {\n      const filterRow = row.filter((cell) => cell !== 0);\n      const newRow = [];\n\n      for (let i = 0; i < filterRow.length; i++) {\n        if (filterRow[i] === filterRow[i + 1]) {\n          const mergedValue = filterRow[i] * 2;\n\n          newRow.push(mergedValue);\n          this.score += mergedValue;\n          i++;\n          moveAbility = true;\n        } else {\n          newRow.push(filterRow[i]);\n        }\n      }\n\n      while (newRow.length < row.length) {\n        newRow.push(0);\n      }\n\n      if (!moveAbility) {\n        moveAbility = !row.every((cell, index) => cell === newRow[index]);\n      }\n\n      return newRow;\n    });\n\n    if (moveAbility) {\n      this.state = newState;\n      this.addNumbers();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return moveAbility;\n  }\n\n  moveRight() {\n    if (this.getStatus() !== Game.STATUS.playing) {\n      return;\n    }\n\n    let moveAbility = false;\n\n    const newState = this.state.map((row) => {\n      const filterRow = row.filter((cell) => cell !== 0);\n      const newRow = [];\n\n      for (let i = filterRow.length - 1; i >= 0; i--) {\n        if (filterRow[i] === filterRow[i - 1]) {\n          const mergedValue = filterRow[i] * 2;\n\n          newRow.unshift(mergedValue);\n          this.score += mergedValue;\n          i--;\n          moveAbility = true;\n        } else {\n          newRow.unshift(filterRow[i]);\n        }\n      }\n\n      while (newRow.length < row.length) {\n        newRow.unshift(0);\n      }\n\n      if (!moveAbility && !row.every((cell, index) => cell === newRow[index])) {\n        moveAbility = true;\n      }\n\n      return newRow;\n    });\n\n    if (moveAbility) {\n      this.state = newState;\n      this.addNumbers();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return moveAbility;\n  }\n\n  moveUp() {\n    if (this.getStatus() !== Game.STATUS.playing) {\n      return;\n    }\n\n    let moveAbility = false;\n    const newState = this.state.map((row) => [...row]);\n\n    for (let c = 0; c < this.state[0].length; c++) {\n      const filterColumn = [];\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (this.state[r][c] !== 0) {\n          filterColumn.push(this.state[r][c]);\n        }\n      }\n\n      const newColumn = [];\n\n      for (let i = 0; i < filterColumn.length; i++) {\n        if (filterColumn[i] === filterColumn[i + 1]) {\n          const mergedValue = filterColumn[i] * 2;\n\n          newColumn.push(mergedValue);\n          this.score += mergedValue;\n          i++;\n          moveAbility = true;\n        } else {\n          newColumn.push(filterColumn[i]);\n        }\n      }\n\n      while (newColumn.length < this.state.length) {\n        newColumn.push(0);\n      }\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (newState[r][c] !== newColumn[r]) {\n          newState[r][c] = newColumn[r];\n          moveAbility = true;\n        }\n      }\n    }\n\n    if (moveAbility) {\n      this.state = newState;\n      this.addNumbers();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return moveAbility;\n  }\n\n  moveDown() {\n    if (this.getStatus() !== Game.STATUS.playing) {\n      return;\n    }\n\n    let moveAbility = false;\n    const newState = this.state.map((row) => [...row]);\n\n    for (let c = 0; c < this.state[0].length; c++) {\n      const filterColumn = [];\n\n      for (let r = this.state.length - 1; r >= 0; r--) {\n        if (this.state[r][c] !== 0) {\n          filterColumn.push(this.state[r][c]);\n        }\n      }\n\n      const newColumn = [];\n\n      for (let i = 0; i < filterColumn.length; i++) {\n        if (filterColumn[i] === filterColumn[i + 1]) {\n          const mergedValue = filterColumn[i] * 2;\n\n          newColumn.unshift(mergedValue);\n          this.score += mergedValue;\n          i++;\n          moveAbility = true;\n        } else {\n          newColumn.unshift(filterColumn[i]);\n        }\n      }\n\n      while (newColumn.length < this.state.length) {\n        newColumn.unshift(0);\n      }\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (newState[r][c] !== newColumn[r]) {\n          newState[r][c] = newColumn[r];\n          moveAbility = true;\n        }\n      }\n    }\n\n    if (moveAbility) {\n      this.state = newState;\n      this.addNumbers();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return moveAbility;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n    this.state = this.initialState.map((row) => [...row]);\n\n    this.addNumbers();\n    this.addNumbers();\n    this.setState();\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = Game.STATUS.idle;\n    this.state = this.initialState.map((row) => [...row]);\n\n    this.setState();\n  }\n\n  getRandomNumber() {\n    return Math.random() < 0.9 ? 2 : 4;\n  }\n\n  addNumbers() {\n    const emptyCell = [];\n\n    for (let rows = 0; rows < this.state.length; rows++) {\n      for (let cells = 0; cells < this.state[rows].length; cells++) {\n        if (this.state[rows][cells] === 0) {\n          emptyCell.push({ r: rows, c: cells });\n        }\n      }\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCell.length);\n    const { r, c } = emptyCell[randomIndex];\n\n    const newState = this.state.map((row) => [...row]);\n\n    newState[r][c] = this.getRandomNumber();\n\n    this.state = newState;\n  }\n\n  setState() {\n    const cells = document.querySelectorAll('.field-cell');\n    const cellsValue = this.state.flat();\n\n    if (cells.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < cellsValue.length; i++) {\n      const currentCells = cells[i];\n      const currentValue = cellsValue[i];\n\n      if (!currentCells) {\n        continue;\n      }\n\n      currentCells.className = 'field-cell';\n\n      if (currentValue > 0) {\n        currentCells.textContent = currentValue;\n        currentCells.classList.add(`field-cell--${currentValue}`);\n      } else {\n        currentCells.textContent = '';\n      }\n    }\n  }\n\n  checkStatus() {\n    let moveAbility = false;\n    let mergeAbility = false;\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 2048) {\n          this.status = Game.STATUS.win;\n\n          return;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length - 1; j++) {\n        if (this.state[i][j] === this.state[i][j + 1]) {\n          mergeAbility = true;\n          break;\n        }\n      }\n\n      if (mergeAbility) {\n        break;\n      }\n    }\n\n    if (!mergeAbility) {\n      for (let i = 0; i < this.state.length - 1; i++) {\n        for (let j = 0; j < this.state[i].length; j++) {\n          if (this.state[i][j] === this.state[i + 1][j]) {\n            mergeAbility = true;\n            break;\n          }\n        }\n\n        if (mergeAbility) {\n          break;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 0) {\n          moveAbility = true;\n          break;\n        }\n      }\n\n      if (moveAbility) {\n        break;\n      }\n    }\n\n    if (!moveAbility && !mergeAbility) {\n      this.status = Game.STATUS.lose;\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["key","value","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","score","status","STATUS","idle","state","map","row","_this","getStatus","playing","moveAbility","newState","filterRow","filter","cell","newRow","mergedValue","push","every","index","addNumbers","setState","checkStatus","unshift","c","filterColumn","r","newColumn","r1","Math","random","emptyCell","rows","cells","randomIndex","floor","_emptyCell_randomIndex","getRandomNumber","document","querySelectorAll","cellsValue","flat","currentCells","currentValue","className","textContent","classList","add","concat","mergeAbility","j","win","i1","j1","i2","j2","i3","j3","lose","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$buttonStart","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$score","addEventListener","toggle","includes","restart","start","$197cd56b15c33885$var$arrowMove","$197cd56b15c33885$var$deleteMove","removeEventListener","action","canMove","moveLeft","moveRight","moveUp","moveDown","remove","preventDefault"],"version":3,"file":"index.cecf4c0b.js.map"}